type SpeakerEoi
  @model
  @aws_cognito_user_pools
  @auth(
    rules: [
      { 
        allow: owner
        operations: [create] 
      }
      { 
        allow: groups, 
        groups: ["admin"], 
        operations: [read, delete] 
      }
    ]
  ) 
  @key (
    name: "speakerEoiByDate",
    fields: ["sortHash", "createdAt"]
    queryField: "speakerEoiByCreatedAt"
  )
  {
    id: ID!
    name: String!
    surname: String!
    email: String!
    mobile: String!
    description: String!
    estimatedLength: String!
    dateOption1: String!
    dateOption2: String
    status: String
    archived: Boolean
    sortHash: String!
    createdAt: String 
    updatedAt: String
  }

# draft needs public read access to prevent anchor hijacking
type Draft
  @model 
  @aws_cognito_user_pools
  @auth(
    rules: [
      { 
        allow: owner
        operations: [create, read, update, delete]
      }
      { 
        allow: groups
        groups: ["admin"]
        operations: [read, update, delete] 
      }
    ]
  ) 
  @key (fields: ["anchor"])
  @key (
    name: "byCreatedAt"
    fields: ["sortHash", "createdAt"]
    queryField: "draftByCreatedAt"
  ) 
  {
    userName: String!
    anchor: String!
    author: String!
    socLink: String!
    sortHash: String!
    title: String!
    summary: String!
    content: String!
    reqRv: Boolean!
    reviewed: Boolean! 
    rvDate: String
    pubDate: String
    createdAt: String
    updatedAt: String
  }

type Post 
  @model 
  @aws_iam
  @aws_cognito_user_pools
  @auth(
    rules: [
      { 
        allow: groups
        groups: ["admin"]
        operations: [create, read, update, delete] 
      }
      { 
        allow: groups
        groups: ["everyone"]
        operations: [read] 
      }
      { 
        allow: public
        provider: iam
        operations: [read]
      }
    ] 
  )
  @key (fields: ["anchor"])
  @key (
    name: "byPubDate"
    fields: ["sortHash", "pubDate"]
    queryField: "postByPubDate"
  ) 
  {
    userName: String!
    anchor: String!
    author: String!
    socLink: String!
    sortHash: String!
    title: String!
    summary: String!
    content: String!
    pubDate: String!
    lastModified: String
    createdAt: String
    updatedAt: String
    comments: [Comment] @connection(keyName: "byAnchor", fields: ["anchor"])
  }

type Comment 
  @model 
  @aws_cognito_user_pools
  @auth(
    rules: [
      { 
        allow: owner
        operations: [create, read, update, delete] 
      }
      { 
        allow: groups
        groups: ["admin"]
        operations: [read, delete] 
      }
      { 
        allow: groups
        groups: ["everyone"]
        operations: [read] 
      }
      { 
        allow: public
        provider: iam
        operations: [read]
      }
    ]
  ) 
  @key (
    name: "byAnchor"
    fields: ["postAnchor", "createdAt"]
    queryField: "commentByCreatedAt" 
  ) 
  {
    id: ID!
    postAnchor: String!
    content: String!
    userId: String!
    userName: String!
    createdAt: String
    updatedAt: String
  }
